@import url('https://fonts.googleapis.com/css2?family=Nunito&display=swap');
/* Everything selector *, *::after/before */
*, *::after, *::before {
    box-sizing: border-box;
}

/* modify and automate by creating var in css */
:root {
    --cell-size: 150px;
    --mark-size: calc(var(--cell-size) * .9);
}

h1 {
    font-family: 'Nunito', 'san-serif';
    font-size: 50px;
    color: white;
    text-align: center;
    margin: 0px;
}

h3 {
    font-family: 'Nunito', 'san-serif';
    font-size: 30px;
    color: white;
    text-align: center;
    margin: 0px;
}

h4 {
    font-family: 'Nunito', 'san-serif';
    font-size: 20px;
    color: white;
    text-align: center;
    margin-top: 10px;
    margin-bottom: 0px;
}

body {
    
    background-image: url("https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/757046db-0514-4b01-92ff-46b63e5c0361/dehm2qo-0494382f-3351-455a-8917-30376d0a9895.png?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOjdlMGQxODg5ODIyNjQzNzNhNWYwZDQxNWVhMGQyNmUwIiwiaXNzIjoidXJuOmFwcDo3ZTBkMTg4OTgyMjY0MzczYTVmMGQ0MTVlYTBkMjZlMCIsIm9iaiI6W1t7InBhdGgiOiJcL2ZcLzc1NzA0NmRiLTA1MTQtNGIwMS05MmZmLTQ2YjYzZTVjMDM2MVwvZGVobTJxby0wNDk0MzgyZi0zMzUxLTQ1NWEtODkxNy0zMDM3NmQwYTk4OTUucG5nIn1dXSwiYXVkIjpbInVybjpzZXJ2aWNlOmZpbGUuZG93bmxvYWQiXX0.0PfQrKr8dAPv20m-0ns_nlGzQhTyDt7ap10gXL260Ww"); 
    background-color: rgb(233, 32, 62);
    background-repeat: no-repeat;
    background-attachment: fixed;
    background-position: center;
    background-size: 100% 100%;
}

/* Styling for 'scoreboard' div using grid-template */
.scoreboard {
    font-family: 'Nunito', 'san-serif';
    color: white;
    margin-bottom: 10px;
    justify-content: center;
    display: grid;
    grid-template-areas:
    "p1 p2"
    "scoreX scoreO";
    grid-template-rows: 25px 25px;
    grid-template-columns: 95px 95px;
    text-align: center;
    
}

#playerX {
    grid-area: p1;
    margin-bottom: 0px;
}

#player0 {
    grid-area: p2;
    margin-bottom: 0px;
}

#xScore {
    grid-area: scoreX;
    margin-top: 0px;
    margin-bottom: 10px;
}

#oScore {
    grid-area: scoreX;
    margin-top: 0px;
    margin-bottom: 10px;
}

/* Board */
.board {
    width: 100%;
    margin-top: 20px;
    padding: 0px;
    display: grid;
    justify-content: center;
    align-content: center;
    justify-items: center;
    align-items: center;
    grid-template-columns: repeat(3, auto);
}

/* Each cell within the board */
.cell {
    width: var(--cell-size);
    height: var(--cell-size);
    border: 1px solid white;
    display: flex;
    justify-content: center;
    align-items: center;
    /* fix offset of x and o */
    position: relative;
    /* cell selector */
    cursor: pointer;
}

/* to remove outside border from board */
.cell:first-child,
.cell:nth-child(2),
.cell:nth-child(3) {
    border-top: none;
}

/* go through all child elements to remove border */
.cell:nth-child(3n + 1) {
    border-left: none;
}
/* .cell:nth-child(3n + 1) {
    border-right: none;
} */
.cell:nth-child(3n + 3) {
    border-right: none;
}

.cell:last-child,
.cell:nth-child(8),
.cell:nth-child(7) {
    border-bottom: none;
}

/* cells with current selection - not-allowed */
.cell.x,
.cell.o {
    cursor: not-allowed;
}

/* empty cell selector for current player - transparent, before click */
.cell.x::before,
.cell.x::after {
    background-color: black;
}

.cell.o::before {
    border: 15px solid black;
    background-color: transparent;
}

.board.x .cell:not(.x):not(.o):hover::before,
.board.x .cell:not(.x):not(.o):hover::after {
    background-color: lightgray;
}

.board.o .cell:not(.x):not(.o):hover::before {
    border: 16px solid lightgray;
    background-color: transparent;
}

/* creating player x and o styling using psuedo elements */
.cell.x::before,
.cell.x::after,
/* transparent hover over empty cell */
.board.x .cell:not(.x):not(.o):hover::before,
.board.x .cell:not(.x):not(.o):hover::after {
    content: '';
    /* fix offset of x and o */
    position: absolute;
    width: calc(var(--mark-size) * .15);
    height: var(--mark-size);
}

.cell.x::before,
.board.x .cell:not(.x):not(.o):hover::before {
    transform: rotate(45deg);
}
.cell.x::after,
.board.x .cell:not(.x):not(.o):hover::after {
    transform: rotate(-45deg);
}

.cell.o::before,
.cell.o::after,
.board.o .cell:not(.x):not(.o):hover::before,
.board.o .cell:not(.x):not(.o):hover::after {
    content: '';
    /* fix offset of x and o */
    position: absolute;
    border-radius: 50%;
}

.cell.o::before,
.board.o .cell:not(.x):not(.o):hover::before {
    width: var(--mark-size);
    height: var(--mark-size);
}

.cell.o::after,
.board.o .cell:not(.x):not(.o):hover::after {
    width: calc(var(--mark-size) * .7);
    height: calc(var(--mark-size) * .7);
    border: 2px;
    background-color: transparent;
}

/* Start game message */
.start-msg {
    z-index: 1;
    display: none;
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background-image: url('https://www.pride.com/sites/default/files/2019/08/11/rupauls-drag-race-rupauls-best-looks-outfits.jpg');
    background-color: rgb(163, 83, 126, 75%);
    background-size: 750px 422px;
    background-repeat: no-repeat;
    background-attachment: fixed;
    background-position: center;
    justify-content: center;
    align-items: center;
    color: white;
    text-shadow: 2px 2px black;
    font-family: 'Nunito';
    font-size: 3rem;
    flex-direction: column;
}

.start-msg button {
    font-family: 'Nunito';
    font-size: 3rem;
    background-color: white;
    border: 1px solid black;
    padding: .25em .5em;
    cursor: pointer;
}

.start-msg button:hover {
    background-color: indigo;
    color: white;
    border-color: white;
}

.start-msg.show {
    display: flex;
}

/* Game over/Winner message */
.win-msg {
    display: none;
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background-image: url('https://crushingkrisis.com/assets/RPDRS0912-RuPaul-Win.jpeg');
    background-color: rgb(163, 83, 126, 75%);
    background-size:contain;
    background-repeat: no-repeat;
    background-attachment: fixed;
    background-position: center;
    justify-content: center;
    align-items: center;
    color: white;
    text-shadow: 2px 2px black;
    font-family: 'Nunito';
    font-size: 3rem;
    flex-direction: column;
}

.win-msg button {
    font-family: 'Nunito';
    font-size: 3rem;
    background-color: white;
    border: 1px solid black;
    padding: .25em .5em;
    cursor: pointer;
}

.win-msg button:hover {
    background-color: indigo;
    color: white;
    border-color: white;
}

.win-msg.show {
    display: flex;
}



/* Yang - css filter to make transparent - google. attach on hover eventlistener, if p1 on hover, append class to cell, render x/o, when leaves  */